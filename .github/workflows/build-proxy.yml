name: Build & Push Proxy
on:
  push:
    branches:
      - "main"
      - "develop"

env:
  prod_branch: refs/heads/main
  dev_branch: refs/heads/develop
  version: 1

jobs:
  build-dockers:
    name: Build Docker images.
    runs-on: ubuntu-latest
    steps:
      - name: Params.
        id: params
        run: |
          echo "::set-output name=env::${{ env.ENV }}"
          echo "::set-output name=registry::${{ fromJSON('{"prod": "piiano","dev":"piiano-dev"}')[env.ENV] }}"
        env:
          ENV: ${{ fromJSON(format('{{"{0}":"prod","{1}":"dev"}}', env.prod_branch, env.dev_branch))[github.ref] }}

      - name: Check Out Repo.
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to GCP Artifact Registry
        uses: docker/login-action@v2
        with:
          registry: us-central1-docker.pkg.dev
          username: _json_key
          password: ${{ secrets[format('{0}_GAR_JSON_KEY', steps.params.outputs.env)] }}

      - name: Build HTTP/3 Proxy and push to GCP Registry
        uses: docker/build-push-action@v3
        with:
          context: .
          tags: |
            us-central1-docker.pkg.dev/${{ steps.params.outputs.registry }}/docker/http3-proxy:latest
            us-central1-docker.pkg.dev/${{ steps.params.outputs.registry }}/docker/http3-proxy:${{ env.version }}
          platforms: linux/amd64
#          push: false
          push: true
          cache-from: |
            type=gha
          cache-to: |
            type=gha,mode=max
